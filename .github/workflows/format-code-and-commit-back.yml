name: Format Code and Commit back to feature branch

on:
  push:
    branches-ignore:
      - main
      - qa
      - dev

jobs:
  format-and-commit:
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Install Python and dependencies
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          pip install isort black

      # Get files changed in the last commit
      - name: Get changed files
        id: changed-files
        run: |
          git show --name-only --pretty="" HEAD | grep '\.py$' > changed_files.txt

      # Run isort and black
      - name: Run isort and black
        run: |
          if [ -s changed_files.txt ]; then
            cat changed_files.txt | xargs isort
            cat changed_files.txt | xargs black
          else
            echo "No changed files found."
          fi

      # Commit changes
      - name: Commit changes
        run: |
          if [ -n "$(git status --porcelain)" ]; then
            git config user.name "github-actions[codeql-bot]"
            git config user.email "github-actions[codeql-bot]@users.noreply.github.com"
            git add --all --force :!changed_files.txt
            git commit -m "Apply isort and black formatting"
            echo "found_formatting_changes=true" >> $GITHUB_ENV
          else
            echo "No formatting changes to commit."
            echo "found_formatting_changes=false" >> $GITHUB_ENV
          fi

      # Set branch name
      - name: Set branch name
        if: env.found_formatting_changes == 'true'
        id: vars
        run: |
          echo "BRANCH_NAME=${{ github.ref }}" >> $GITHUB_ENV

      # Push changes back to the branch
      - name: Push changes
        if: env.found_formatting_changes == 'true'
        run: |
          git push origin ${{ env.BRANCH_NAME }}